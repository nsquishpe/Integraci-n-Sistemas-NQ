//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// Microsoft.VSDesigner generó automáticamente este código fuente, versión=4.0.30319.42000.
// 
#pragma warning disable 1591

namespace IntegracionSI_BD_Empresa.SWcliente {
    using System.Diagnostics;
    using System;
    using System.Xml.Serialization;
    using System.ComponentModel;
    using System.Web.Services.Protocols;
    using System.Web.Services;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="SWclientesSoap", Namespace="http://tempuri.org/")]
    public partial class SWclientes : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback SeleccionarClientesOperationCompleted;
        
        private System.Threading.SendOrPostCallback SeleccionarClientesPorCedulaOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public SWclientes() {
            this.Url = global::IntegracionSI_BD_Empresa.Properties.Settings.Default.IntegracionSI_BD_Empresa_SWcliente_SWclientes;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event SeleccionarClientesCompletedEventHandler SeleccionarClientesCompleted;
        
        /// <remarks/>
        public event SeleccionarClientesPorCedulaCompletedEventHandler SeleccionarClientesPorCedulaCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SeleccionarClientes", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Clientes[] SeleccionarClientes() {
            object[] results = this.Invoke("SeleccionarClientes", new object[0]);
            return ((Clientes[])(results[0]));
        }
        
        /// <remarks/>
        public void SeleccionarClientesAsync() {
            this.SeleccionarClientesAsync(null);
        }
        
        /// <remarks/>
        public void SeleccionarClientesAsync(object userState) {
            if ((this.SeleccionarClientesOperationCompleted == null)) {
                this.SeleccionarClientesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSeleccionarClientesOperationCompleted);
            }
            this.InvokeAsync("SeleccionarClientes", new object[0], this.SeleccionarClientesOperationCompleted, userState);
        }
        
        private void OnSeleccionarClientesOperationCompleted(object arg) {
            if ((this.SeleccionarClientesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SeleccionarClientesCompleted(this, new SeleccionarClientesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SeleccionarClientesPorCedula", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Clientes SeleccionarClientesPorCedula(int cedula) {
            object[] results = this.Invoke("SeleccionarClientesPorCedula", new object[] {
                        cedula});
            return ((Clientes)(results[0]));
        }
        
        /// <remarks/>
        public void SeleccionarClientesPorCedulaAsync(int cedula) {
            this.SeleccionarClientesPorCedulaAsync(cedula, null);
        }
        
        /// <remarks/>
        public void SeleccionarClientesPorCedulaAsync(int cedula, object userState) {
            if ((this.SeleccionarClientesPorCedulaOperationCompleted == null)) {
                this.SeleccionarClientesPorCedulaOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSeleccionarClientesPorCedulaOperationCompleted);
            }
            this.InvokeAsync("SeleccionarClientesPorCedula", new object[] {
                        cedula}, this.SeleccionarClientesPorCedulaOperationCompleted, userState);
        }
        
        private void OnSeleccionarClientesPorCedulaOperationCompleted(object arg) {
            if ((this.SeleccionarClientesPorCedulaCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SeleccionarClientesPorCedulaCompleted(this, new SeleccionarClientesPorCedulaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class Clientes {
        
        private int cedulaField;
        
        private string nombreField;
        
        private string emailField;
        
        private string direccionField;
        
        private int telefonoField;
        
        /// <remarks/>
        public int Cedula {
            get {
                return this.cedulaField;
            }
            set {
                this.cedulaField = value;
            }
        }
        
        /// <remarks/>
        public string Nombre {
            get {
                return this.nombreField;
            }
            set {
                this.nombreField = value;
            }
        }
        
        /// <remarks/>
        public string Email {
            get {
                return this.emailField;
            }
            set {
                this.emailField = value;
            }
        }
        
        /// <remarks/>
        public string Direccion {
            get {
                return this.direccionField;
            }
            set {
                this.direccionField = value;
            }
        }
        
        /// <remarks/>
        public int Telefono {
            get {
                return this.telefonoField;
            }
            set {
                this.telefonoField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void SeleccionarClientesCompletedEventHandler(object sender, SeleccionarClientesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SeleccionarClientesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SeleccionarClientesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Clientes[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Clientes[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void SeleccionarClientesPorCedulaCompletedEventHandler(object sender, SeleccionarClientesPorCedulaCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SeleccionarClientesPorCedulaCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SeleccionarClientesPorCedulaCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Clientes Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Clientes)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591