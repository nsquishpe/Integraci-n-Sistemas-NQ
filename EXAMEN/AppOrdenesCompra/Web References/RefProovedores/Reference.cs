//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// Microsoft.VSDesigner generó automáticamente este código fuente, versión=4.0.30319.42000.
// 
#pragma warning disable 1591

namespace AppOrdenesCompra.RefProovedores {
    using System.Diagnostics;
    using System;
    using System.Xml.Serialization;
    using System.ComponentModel;
    using System.Web.Services.Protocols;
    using System.Web.Services;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="SWProovedoresSoap", Namespace="http://tempuri.org/")]
    public partial class SWProovedores : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback SeleccionarProovedoresOperationCompleted;
        
        private System.Threading.SendOrPostCallback SeleccionarProovedoresPorIDOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public SWProovedores() {
            this.Url = global::AppOrdenesCompra.Properties.Settings.Default.AppOrdenesCompra_RefProovedores_SWProovedores;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event SeleccionarProovedoresCompletedEventHandler SeleccionarProovedoresCompleted;
        
        /// <remarks/>
        public event SeleccionarProovedoresPorIDCompletedEventHandler SeleccionarProovedoresPorIDCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SeleccionarProovedores", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Proveedores[] SeleccionarProovedores() {
            object[] results = this.Invoke("SeleccionarProovedores", new object[0]);
            return ((Proveedores[])(results[0]));
        }
        
        /// <remarks/>
        public void SeleccionarProovedoresAsync() {
            this.SeleccionarProovedoresAsync(null);
        }
        
        /// <remarks/>
        public void SeleccionarProovedoresAsync(object userState) {
            if ((this.SeleccionarProovedoresOperationCompleted == null)) {
                this.SeleccionarProovedoresOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSeleccionarProovedoresOperationCompleted);
            }
            this.InvokeAsync("SeleccionarProovedores", new object[0], this.SeleccionarProovedoresOperationCompleted, userState);
        }
        
        private void OnSeleccionarProovedoresOperationCompleted(object arg) {
            if ((this.SeleccionarProovedoresCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SeleccionarProovedoresCompleted(this, new SeleccionarProovedoresCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SeleccionarProovedoresPorID", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Proveedores SeleccionarProovedoresPorID(string ID) {
            object[] results = this.Invoke("SeleccionarProovedoresPorID", new object[] {
                        ID});
            return ((Proveedores)(results[0]));
        }
        
        /// <remarks/>
        public void SeleccionarProovedoresPorIDAsync(string ID) {
            this.SeleccionarProovedoresPorIDAsync(ID, null);
        }
        
        /// <remarks/>
        public void SeleccionarProovedoresPorIDAsync(string ID, object userState) {
            if ((this.SeleccionarProovedoresPorIDOperationCompleted == null)) {
                this.SeleccionarProovedoresPorIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSeleccionarProovedoresPorIDOperationCompleted);
            }
            this.InvokeAsync("SeleccionarProovedoresPorID", new object[] {
                        ID}, this.SeleccionarProovedoresPorIDOperationCompleted, userState);
        }
        
        private void OnSeleccionarProovedoresPorIDOperationCompleted(object arg) {
            if ((this.SeleccionarProovedoresPorIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SeleccionarProovedoresPorIDCompleted(this, new SeleccionarProovedoresPorIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class Proveedores {
        
        private string provIDField;
        
        private string provNombreField;
        
        /// <remarks/>
        public string ProvID {
            get {
                return this.provIDField;
            }
            set {
                this.provIDField = value;
            }
        }
        
        /// <remarks/>
        public string ProvNombre {
            get {
                return this.provNombreField;
            }
            set {
                this.provNombreField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void SeleccionarProovedoresCompletedEventHandler(object sender, SeleccionarProovedoresCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SeleccionarProovedoresCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SeleccionarProovedoresCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Proveedores[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Proveedores[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void SeleccionarProovedoresPorIDCompletedEventHandler(object sender, SeleccionarProovedoresPorIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SeleccionarProovedoresPorIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SeleccionarProovedoresPorIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Proveedores Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Proveedores)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591